"""
힙 (Heap) 이란?
: 데이터에서 최대값과 최소값을 빠르게 찾기 위해 고안된 완전 이진 트리
    - 완전 이진 트리 : 노드를 삽입할 때 최하단 왼쪽 노드부터 차례대로 삽입하는 트리

1. 힙을 사용하는 이유
: 배열에 데이터를 넣고, 최대값과 최소값을 찾으려면 O(n)이 걸림
: 이에 반해, 힙에 데이터를 넣고, 최대값과 최소값을 찾으면 O(logn)이 걸림
: 우선순위 큐와 같이 최대값 또는 최소값을 빠르게 찾아야 하는 자료구조 및 알ㄹ고리즘 구현 등에 활용됨

2. 힙의 구조
1) 최대 힙 (Max Heap) : 최대값을 구하기 위한 구조
2) 최소 힙 (Min Heap) : 최th값을 구하기 위한 구조
    - 각 노드의 값은 해당 노드의 자식 노드가 가진 값보다 크거나 같다 (최대 힙의 경우)
    - 긱 노드의 값은 해당 노드의 자식 노드가 가진 값보다 작거나 같다 (최소 힙의 경우)
3) 완전 이진 트리의 형태를 가짐
    : 왼쪽 자식부터 채우고, 자식 노드는 2개를 다 가지고 있어야 한다.

4) 힙과 이진 탐색 트리의 공통점과 차이점
공통점 : 힙과 이진 탐색 트리는 모두 이진 트리
차이점 :
    - 힙은 각 노드의 값이 자식 노드보다 크거나 같음
    - 이진 탐색 트리는 왼쪽 자식 노드의 값이 가장 작고, 그 다음 부모 노드, 그 다음 오른쪽 자식 노드 값이 가장 큼 (힙은 이 조건이 없음(왼쪽 자식이 더 클수도, 작을수도 있음))
    - 이진 탐색 트리 - 탐색 / 힙 - 최대/최소 값 검색

3. 힙 동작
1) 힙에 데이터 삽입하기 - 기본 동작
: 힙은 완전 이진 트리이므로, 삽입할 노드는 기본적으로 왼쪽 최하단부 노드부터 채워디는 형태로 삽입
